#!/usr/bin/bash

while getopts t:f:h option
do 
case "${option}" in 
f) file=${OPTARG};;
t) g2t=${OPTARG};;
h) echo "################################################";
   echo "use the following syntax:";
   echo "";
   echo "./convert.ba -t GENES_TO_TRANSCRIPT_FILE -f AMINO_ACID_FILE"; 
   echo "";
   echo "where GENES_TO_TRANSCRIPT_FILE is from the previous step and"
   echo "where AMINO_ACID_FILE is the name of the aa file";
   echo "from evigenes." ;
   echo "################################################"
   exit 0;;
esac
done

awk 'NR==FNR {a[$2]=$1; next} NR>FNR {print a[$1]"::"$0}' <(awk 'OFS="\t"{print $1,">"$2}' $g2t) $file | sed -E -e 's/>/#/g' -e 's/ aalen=([0-9]*),[0-9]*%,([A-Za-z0-9-]*); clen=([0-9]*); strand=(.); (.*)/::g.\3\tm.\1\t \2 len:\1 (\4)/g' | awk '{if ($1!~/#/) {print substr($0,3)} else {print ">"$1"::"$2" "$1" ORF type:"$3" "$4" "$5" "$1":1-"$2" "$5" "}}' | sed -E -e 's/#//g' -e 's/partial[-A-Za-z]*[^35]/internal /g' -e 's/partial5[a-zA-Z-]*/5prime_partial/g' -e 's/partial3[a-zA-Z-]*/3prime_partial/g' -e 's/[A-Za-z0-9_.]*::([A-Za-z0-9_.]*)::g.[0-9]*(:1-)m.([0-9]*) (.[+-].)/\1\2\3\4/g' > transcripts.reformated.aa
